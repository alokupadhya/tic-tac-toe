{"version":3,"sources":["Game.js","serviceWorker.js","index.js"],"names":["rowStyle","display","squareStyle","boardStyle","containerStyle","instructionsStyle","warningStyle","buttonStyle","Square","props","callParent","bind","this","action","pos","className","style","onClick","move","React","Component","Board","state","turn","moves","_1","_2","_3","_4","_5","_6","_7","_8","_9","win","status","player","msg","onClickTurn","resetBoard","setState","checkWinning","Game","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb7a3280.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst rowStyle = {\n  display: 'flex'\n}\n\nconst squareStyle = {\n  'width':'60px',\n  'height':'60px',\n  'backgroundColor': '#ddd',\n  'margin': '4px',\n  'display': 'flex',\n  'justifyContent': 'center',\n  'alignItems': 'center',\n  'fontSize': '20px',\n  'color': 'black'\n}\n\nconst boardStyle = {\n  'backgroundColor': '#eee',\n  'width': '208px',\n  'alignItems': 'center',\n  'justifyContent': 'center',\n  'display': 'flex',\n  'flexDirection': 'column',\n  'border': '3px #eee solid'\n}\n\nconst containerStyle = {\n  'display': 'flex',\n  'alignItems': 'center',\n  'flexDirection': 'column'\n}\n\nconst instructionsStyle = {\n  'marginTop': '5px',\n  'marginBottom': '5px',\n  'fontWeight': 'bold',\n  'fontSize': '16px',\n}\n\nconst warningStyle = {\n  'marginTop': '5px',\n  'marginBottom': '5px',\n  'fontWeight': 'bold',\n  'fontSize': '16px',\n  'color':'red',\n}\n\nconst buttonStyle = {\n  'marginTop': '15px',\n  'marginBottom': '16px',\n  'width': '80px',\n  'height': '40px',\n  'backgroundColor': '#8acaca',\n  'color': 'white',\n  'fontSize': '16px',\n}\n\nclass Square extends React.Component {\n  constructor(props){\n    super(props);\n    this.callParent = this.callParent.bind(this);\n  }\n  callParent(){\n    this.props.action(this.props.pos);\n  }\n  render() {\n    return (\n      <div\n        className=\"square\"\n        style={squareStyle}\n        onClick={this.callParent}>\n        {this.props.move}\n      </div>\n    );\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      turn:'O',\n      moves:{\n        _1:\"\",_2:\"\",_3:\"\",\n        _4:\"\",_5:\"\",_6:\"\",\n        _7:\"\",_8:\"\",_9:\"\",\n      },\n      win:{\n        status:false,\n        player:\"None\"\n      },\n      msg:\"\"\n    }\n    this.onClickTurn = this.onClickTurn.bind(this);\n    this.resetBoard = this.resetBoard.bind(this);\n  }\n\n  checkWinning(player){\n    let {moves,win} = this.state;\n    if(moves._1===player && moves._2===player && moves._3===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._4===player && moves._5===player && moves._6===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._7===player && moves._8===player && moves._9===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._1===player && moves._4===player && moves._7===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._2===player && moves._5===player && moves._8===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._3===player && moves._6===player && moves._9===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._1===player && moves._5===player && moves._9===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    else if(moves._3===player && moves._5===player && moves._7===player){\n      win.status = true;\n      win.player = player;\n      this.setState({win});\n      return true;\n    }\n\n    return false;\n  }\n\n  onClickTurn(pos){\n    let {turn,moves,msg,win} = this.state;\n    if(win.status){\n      msg = \"Please reset the game board. Player \"+win.player+\" is winner.\" ;\n      this.setState({msg});\n    }\n    else if(moves[pos]===\"\"){\n      moves[pos] = turn;\n      msg = \"\";\n      this.setState({moves,msg});\n      if(!this.checkWinning(turn)){\n        turn = (turn === 'O')?'X':'O';\n        this.setState({turn});\n      }\n    }\n    else{\n      msg = \"Invalid Move\";\n      this.setState({msg});\n    }\n  }\n\n  resetBoard(){\n    let {moves,msg,turn,win} = this.state;\n    moves._1 = \"\";moves._2 = \"\";moves._3 = \"\";\n    moves._4 = \"\";moves._5 = \"\";moves._6 = \"\";\n    moves._7 = \"\";moves._8 = \"\";moves._9 = \"\";\n    msg = \"\";\n    win.player = \"None\";\n    win.status = false;\n    turn = 'O';\n\n    this.setState({moves,msg,turn,win}); \n  }\n\n  render() {\n    let {moves,turn, win} = this.state;\n    return (\n      <div style={containerStyle} className=\"gameBoard\">\n        <div className=\"status\" style={instructionsStyle}>Next player: {turn}</div>\n        <div className=\"winner\" style={instructionsStyle}>Winner: {win.player}</div>\n        <button style={buttonStyle} onClick={this.resetBoard}>Reset</button>\n        <div style={boardStyle}>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square move={moves._1} pos={'_1'} action={this.onClickTurn}/>\n            <Square move={moves._2} pos={'_2'} action={this.onClickTurn}/>\n            <Square move={moves._3} pos={'_3'} action={this.onClickTurn}/>\n          </div>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square move={moves._4} pos={'_4'} action={this.onClickTurn}/>\n            <Square move={moves._5} pos={'_5'} action={this.onClickTurn}/>\n            <Square move={moves._6} pos={'_6'} action={this.onClickTurn}/>\n          </div>\n          <div className=\"board-row\" style={rowStyle}>\n            <Square move={moves._7} pos={'_7'} action={this.onClickTurn}/>\n            <Square move={moves._8} pos={'_8'} action={this.onClickTurn}/>\n            <Square move={moves._9} pos={'_9'} action={this.onClickTurn}/>\n          </div>\n        </div>\n        <div className=\"message\" style={warningStyle}>{this.state.msg}</div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}